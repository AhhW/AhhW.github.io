<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AhhW&#39;s Blog</title>
  
  <subtitle>毕竟几人真得鹿&lt;br/&gt;不知终日梦为鱼</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-15T11:19:17.818Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>AhhW</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>问题求解OJ第三、四周</title>
    <link href="http://yoursite.com/2019/04/15/%E9%97%AE%E6%B1%82OJ%E7%AC%AC%E4%BA%8C%E5%AD%A6%E6%9C%9F%E7%AC%AC%E4%B8%89%E5%9B%9B%E5%91%A8/"/>
    <id>http://yoursite.com/2019/04/15/问求OJ第二学期第三四周/</id>
    <published>2019-04-15T11:11:37.000Z</published>
    <updated>2019-04-15T11:19:17.818Z</updated>
    
    <content type="html"><![CDATA[<p>问题求解（二）的第三周和第四周的部分题目的题解。<a id="more"></a></p><h2 id="问题求解OJ第三周"><a href="#问题求解OJ第三周" class="headerlink" title="问题求解OJ第三周"></a>问题求解OJ第三周</h2><h3 id="A-逆序对"><a href="#A-逆序对" class="headerlink" title="A. 逆序对"></a>A. 逆序对</h3><h4 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h4><p>求数组中逆序对的个数</p><h4 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h4><p>改写归并排序，在合并时计数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">merge</span><span class="params">(ll arr[], ll temp[], ll l, ll m, ll r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll count = <span class="number">0</span>, i, j;</span><br><span class="line">    <span class="keyword">for</span>(i = l; i &lt;= r; i++) temp[i] = arr[i];</span><br><span class="line">    ll k = l;</span><br><span class="line">    <span class="keyword">for</span>(i = l, j = m + <span class="number">1</span>; i &lt;= m &amp;&amp; j &lt;= r; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(temp[i] &gt; temp[j])</span><br><span class="line">        &#123;</span><br><span class="line">            count += m - i + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//若左序列元素比右序列元素大</span></span><br><span class="line">            <span class="comment">//逆序对数量增加该元素到左序列尾的元素数量</span></span><br><span class="line">            <span class="comment">//其余代码为归并排序的步骤</span></span><br><span class="line">            arr[k] = temp[j++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> arr[k] = temp[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//不要忘记下面两行</span></span><br><span class="line">    <span class="keyword">if</span>(i &gt; m) <span class="keyword">while</span>(j &lt;= r) arr[k++] = temp[j++];</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">while</span>(i &lt;= m) arr[k++] = temp[i++];</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">reversePair</span><span class="params">(ll arr[], ll temp[], ll l, ll r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    ll m = (l + r) / <span class="number">2</span>;</span><br><span class="line">    ll ln = reversePair(arr, temp, l, m);</span><br><span class="line">    ll rn = reversePair(arr, temp, m + <span class="number">1</span>, r);</span><br><span class="line">    ll mn = merge(arr, temp, l, m, r);</span><br><span class="line">    <span class="keyword">return</span> ln + rn + mn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n, i;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    ll test[n], t[n];</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">cin</span> &gt;&gt; test[i];</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; reversePair(test, t, <span class="number">0</span>, i - <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="问题求解OJ第四周"><a href="#问题求解OJ第四周" class="headerlink" title="问题求解OJ第四周"></a>问题求解OJ第四周</h2><h3 id="A-组合数2"><a href="#A-组合数2" class="headerlink" title="A. 组合数2"></a>A. 组合数2</h3><h4 id="题意：-1"><a href="#题意：-1" class="headerlink" title="题意："></a>题意：</h4><p>求解 $\left(\sum_{i=0}^{\min (x, y)} \left( \begin{array}{c}{x} \ {i}\end{array}\right)\right) \quad \bmod 1000000007$</p><h4 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h4><p>组合数函数预处理逆元优化复杂度，组合数公式$\sum_{i=0}^{m} \left( \begin{array}{c}{m} \ {i}\end{array}\right) \left( \begin{array}{l}{n} \ {i}\end{array}\right)=\left( \begin{array}{c}{n+m} \ {m}\end{array}\right)$（范德蒙恒等式的一个推论）取代两层循环优化复杂度</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BinomialCoefficient</span>//定义一个类在取模下求解二次项系数</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; factorial;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; factorial_inverse;</span><br><span class="line">    <span class="keyword">int</span> n, mod;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    BinomialCoefficient() &#123;&#125;</span><br><span class="line">    BinomialCoefficient(<span class="keyword">int</span> _n, <span class="keyword">int</span> _mod) : n(_n), mod(_mod)</span><br><span class="line">    &#123;</span><br><span class="line">        factorial = <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        factorial_inverse = <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(n + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            factorial[i] = (<span class="keyword">long</span> <span class="keyword">long</span> )factorial[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">            factorial_inverse[i] = mod - (<span class="keyword">long</span> <span class="keyword">long</span>)factorial_inverse[mod % i] * (mod / i) % mod;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            factorial_inverse[i] = (<span class="keyword">long</span> <span class="keyword">long</span>)factorial_inverse[i - <span class="number">1</span>] * factorial_inverse[i] % mod;</span><br><span class="line">            assert((<span class="keyword">long</span> <span class="keyword">long</span>)factorial[i] * factorial_inverse[i] % mod == <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">operator</span> <span class="params">()</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> n, <span class="keyword">const</span> <span class="keyword">int</span> m)</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        assert(n &gt;= m &amp;&amp; n &gt;= <span class="number">0</span> &amp;&amp; m &gt;= <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">long</span> <span class="keyword">long</span>)factorial[n] * factorial_inverse[m] % mod * factorial_inverse[n - m] % mod;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; C(<span class="number">2000000</span>, <span class="number">1000000007</span>);</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a ? b : a &lt;= b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t, i, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">int</span> a[t + <span class="number">1</span>], b[t + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; t; i++) <span class="built_in">cin</span> &gt;&gt; a[i] &gt;&gt; b[i];</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; t; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += C(a[i] + b[i], min(a[i], b[i])) % <span class="number">1000000007</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; sum % <span class="number">1000000007</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-约瑟夫环"><a href="#B-约瑟夫环" class="headerlink" title="B. 约瑟夫环"></a>B. 约瑟夫环</h3><h4 id="题意：-2"><a href="#题意：-2" class="headerlink" title="题意："></a>题意：</h4><p>现在有$n$个人, 编号从$0$到$n−1$, 站成一圈, 编号为$i$的人右手边是编号为$i+1$的人($n-1$的右手边为$0$), 进行一种约瑟夫环游戏的变式.</p><p>游戏一共进行$n−1$轮, 一开始编号为$0$的人手里拿着旗子. 在第$i$轮(从$1$开始计数), 手上拿着旗子的人把旗子传给他右手边的人, 一共传$w[i]$次, 传完之后拿着旗子的人退出队伍, 并把旗子传给他右手边的人. 问最后剩在队伍里的人是谁.</p><h4 id="题解：-2"><a href="#题解：-2" class="headerlink" title="题解："></a>题解：</h4><p>用所给数组取代递推式 $f(1)=0, f(i)=(f(i-1)+m) \quad \bmod i​$ 中的 $m​$<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">int</span> w[maxn] &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Jsp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> (w[c] + Jsp(a - <span class="number">1</span>, c + <span class="number">1</span>)) % a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, tmp;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; tmp;</span><br><span class="line">        w[i] = tmp + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; Jsp(n, <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="C-第k大子段"><a href="#C-第k大子段" class="headerlink" title="C. 第k大子段"></a>C. 第k大子段</h3><h4 id="题意：-3"><a href="#题意：-3" class="headerlink" title="题意："></a>题意：</h4><p>给定一个数列$a_{1}, a_{2}, \cdots, a_{n}​$, 对每个二元组$(l, r), 1 \leq l \leq r \leq n​$, 按以下方法定义一个偏序关系</p><p>记$S(l, r)=\sum_{i=l}^{r} a_{i}$</p><p>对于$\left(l_{1}, r_{1}\right),\left(l_{2}, r_{2}\right)$</p><ul><li>若$S\left(l_{1}, r_{1}\right)&lt;S\left(l_{2}, r_{2}\right)$，则$\left(l_{1}, r_{1}\right)&lt;\left(l_{2}, r_{2}\right)$</li><li>若$S\left(l_{1}, r_{1}\right)=S\left(l_{2}, r_{2}\right)​$，且$l_{1}&gt;l_{2}​$，则$\left(l_{1}, r_{1}\right)&lt;\left(l_{2}, r_{2}\right)​$</li><li>若$S\left(l_{1}, r_{1}\right)=S\left(l_{2}, r_{2}\right)$，且$l_{1}=l_{2}$，且$r_{1}&gt;r_{2}$，则$\left(l_{1}, r_{1}\right)&lt;\left(l_{2}, r_{2}\right)​$</li></ul><p>把每个二元组$(l, r), 1 \leq l \leq r \leq n$按以上定义从小到大排序，询问其中第$k$大的二元组（从1开始数，第1大的就是最大的）</p><p>$5 \leq n \leq 10^{5}$<br>$1 \leq k \leq 10$<br>$-10^{5} \leq a_{i} \leq 10^{5}$</p><h4 id="题解：-3"><a href="#题解：-3" class="headerlink" title="题解："></a>题解：</h4><p>模拟，先确定一个区间的左端点$l(1\le l \le n)$，此时$s[l-1]$已经确定，若要使区间和尽可能大，则要找到使得$s<a href="l\le r\le n">r</a>$尽可能大的右端点，所以根据题意要找出以$l$为左端点的最大的$k$个区间。从$n$到$1$枚举左端点，而在枚举过程中每次$l$左移，以$l-1$为左端点的可能的最大的$k$个区间的右端点在以$l$为左端点的最大的$k$个区间与$s[l-1]$中，维护当前右边最大的$k$个区间，每次向左移动一位时就又有了一个可能的$s[r]$，把它与当前右边最大的$k$个区间比较并去掉最小的，就得到了新的当前右边最大的$k$个区间。最终得到了一个$n \times k$表，也就是每个左端点对应的前$k$大区间的信息，把各行按降序排序就得到$n$个长度为$k$的有序表，扫描$k-1$次$n$个表的表头元素，每次都去掉最大的就得到答案。若k无限制，可参考<a href="http://www.cnblogs.com/2020pengxiyue/p/9564435.html#_caption_3" target="_blank" rel="noopener">这篇文章</a>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> r(i,x,y) for (int i=x;i&lt;=y;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> d(i,y,x) for (int i=y;i&gt;=x;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> s(x) (int)(x.size())</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> uLL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = (<span class="number">1e5</span>) + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> LL INF = (<span class="number">1e18</span>);</span><br><span class="line"><span class="keyword">int</span> n, K, cur, pos[maxn];</span><br><span class="line">LL maxi, a[maxn], s[maxn];</span><br><span class="line"><span class="built_in">set</span>&lt;pair&lt;LL, <span class="keyword">int</span>&gt; &gt; S;</span><br><span class="line"><span class="built_in">set</span>&lt;pair&lt;LL, <span class="keyword">int</span>&gt; &gt;::iterator it;</span><br><span class="line"><span class="built_in">vector</span>&lt;pair&lt;LL, <span class="keyword">int</span>&gt; &gt; v[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;K);</span><br><span class="line">    r(i, <span class="number">1</span>, n) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;a[i]);</span><br><span class="line">    s[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    r(i, <span class="number">1</span>, n) s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    d(i, n, <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        S.insert(make_pair(-s[i], i));</span><br><span class="line">        <span class="keyword">if</span> ((n - i) &gt;= K) S.erase(--S.end());</span><br><span class="line">        <span class="keyword">for</span> (it = S.begin(); it != S.end(); ++it) </span><br><span class="line">            v[i].push_back(make_pair(-(*it).first - s[i - <span class="number">1</span>], (*it).second));</span><br><span class="line">    &#125;</span><br><span class="line">    r(i, <span class="number">1</span>, n) pos[i] = <span class="number">0</span>;</span><br><span class="line">    r(i, <span class="number">1</span>, K - <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        maxi = -INF;</span><br><span class="line">        r(j, <span class="number">1</span>, n)</span><br><span class="line">        <span class="keyword">if</span> (pos[j] &lt; s(v[j])) </span><br><span class="line">            <span class="keyword">if</span> (v[j][pos[j]].first &gt; maxi) maxi = v[j][pos[j]].first, cur = j;</span><br><span class="line">        ++pos[cur];</span><br><span class="line">    &#125;</span><br><span class="line">    maxi = -INF;</span><br><span class="line">    r(j, <span class="number">1</span>, n)</span><br><span class="line">    <span class="keyword">if</span> (pos[j] &lt; s(v[j])) </span><br><span class="line">        <span class="keyword">if</span> (v[j][pos[j]].first &gt; maxi) maxi = v[j][pos[j]].first, cur = j;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, cur, v[cur][pos[cur]].second);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;问题求解（二）的第三周和第四周的部分题目的题解。
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="问题求解" scheme="http://yoursite.com/tags/%E9%97%AE%E9%A2%98%E6%B1%82%E8%A7%A3/"/>
    
      <category term="OJ" scheme="http://yoursite.com/tags/OJ/"/>
    
  </entry>
  
  <entry>
    <title>节物风光不相待，桑田碧海须臾改</title>
    <link href="http://yoursite.com/2019/02/04/%E6%96%B0%E5%B9%B4/"/>
    <id>http://yoursite.com/2019/02/04/新年/</id>
    <published>2019-02-04T00:10:13.000Z</published>
    <updated>2019-02-05T01:28:34.510Z</updated>
    
    <content type="html"><![CDATA[<p>​    <a id="more"></a></p><p>放下手中的高代，离开桌上的键盘，我凝神细思，今年三十窗外的鞭炮声尤其多，在庆祝什么、哀悼什么、告别什么。</p><p>昨天傍晚，站在楼下望着远方的天空，风景与空气的味道恒常如新，曾经的满身疲惫而又满心天真幻想的我，却在盛夏的高温、秋冬的霜雪里一去不返了。</p><p>坐在吊灯下抑或台灯旁的漆黑夜晚，走在弥漫校园的树叶沙沙狂响中，跑过花园边风吹落满树的樱花飞舞，更不要提书桌里杂乱的试卷与练习题······</p><p>我以为我会永远记得，像手掌中的纹路一样永远为伴，记忆却早已变得像晕着水雾的窗玻璃，斑驳脱落的墙壁表面，让人难以看的清晰。</p><p>但我更加清楚的看见，未来在我眼前或者说在我手中，平台宽广，视野开阔，何种成败皆取决于我如何面对选择，于是在漫天鞭炮声中，我想起来——节物风光不相待，桑田碧海须臾改。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="年终" scheme="http://yoursite.com/tags/%E5%B9%B4%E7%BB%88/"/>
    
  </entry>
  
  <entry>
    <title>再见2018, 你好2019!</title>
    <link href="http://yoursite.com/2018/12/29/%E5%86%8D%E8%A7%812018,%20%E4%BD%A0%E5%A5%BD2019!/"/>
    <id>http://yoursite.com/2018/12/29/再见2018, 你好2019!/</id>
    <published>2018-12-28T16:10:23.000Z</published>
    <updated>2019-02-03T04:41:51.100Z</updated>
    
    <content type="html"><![CDATA[<p>考试周到了, 我现在慌得一批/发抖。 <a id="more"></a></p><p>这几天狂补 C++, 英文书真的读太慢, 只得买了本 <em>C++ Primer</em> 中文版两天到了, 然后一本书看了三天(看完? 怎么可能)。 今天开始刘汝佳的书, 读着挺有意思不知道备考能不能 work(讲道理复习一下作业题就好啦)。 </p><p>这学期还真不是一点实际东西都没学到, 平时挣扎中很多东西留下了, 一经整合知识给压实了(胡说八道)。 </p><p>快把这文章写好吧, 再不写年底都要翻过去了。 说是文章, 其实文笔完全 programmer 化了。 </p><h1 id="九月之前已被遗忘-九月至今混沌如常。"><a href="#九月之前已被遗忘-九月至今混沌如常。" class="headerlink" title="九月之前已被遗忘, 九月至今混沌如常。"></a>九月之前已被遗忘, 九月至今混沌如常。</h1><p>高中的日子遥远的像上个世纪, 最接近此刻的高三都化作了淡影, 只有它的气息还隐隐留了下来。 </p><p>回忆似乎不是现在我想做的事情。 </p><p>而八月底来到南京, 人生进入新的天地, 在脱胎换骨的愉悦与无法完全适应的焦虑中, 脚步停滞甚至倒退。 </p><p>混沌似乎成了主线。 </p><h1 id="天开教泽-道启南雍。"><a href="#天开教泽-道启南雍。" class="headerlink" title="天开教泽, 道启南雍。"></a>天开教泽, 道启南雍。</h1><p>也曾为明明有其他选择, 却来到一般认为的华五最差而不安。 最终我认为那不过是虚荣作祟, 我还是做了正确的选择。 </p><p>前身国立中央大学位居亚洲第一, 清北所不及, 改革时一分十四, 未曾合并一所高校却长期位列三甲, 直到近些年始有下滑, 所以院楼自习室里才有学长学姐们写下的 <em>“Make NJU Great Again”</em>。 </p><p>我爱南大, 这是我生活的地方, 仙林斑斓, 鼓楼深静。 </p><h1 id="寒假又有哪些雄心壮志了"><a href="#寒假又有哪些雄心壮志了" class="headerlink" title="寒假又有哪些雄心壮志了?"></a>寒假又有哪些雄心壮志了?</h1><p>那就先说点有的没的。 </p><p>不想学习的时候瞎鼓捣, 电脑主题看着越来越顺眼了, 就缺 MacType 了/笑哭。 </p><p>关于博客, 把用 Hexo 搭的主题和内容都完善下，还想搞清原理, 比如用到的 Git 和 Node。js, 至少 Markdown 的语法要精通吧。 然后看看域名有没有免费的可申。 另外 WordPress 了解下, 如果它更好可能会搬, 如此大概率 PHP, HTML 得学起来(我猜)? </p><p>这个先不管, Python 辣么有意思肯定要学, QT 能做 C++ 的图形界面肯定要学。 嗯就酱。 </p><p>还有，给学计算机的高中同学建个群, 大家来交流(友)呀。 </p><p>尝试 Ubuntu/Linux/Unix 系统，到现在也不知道他们什么关系嘤。 </p><p>买周老师的西瓜书, 买了再说, 怕什么看不懂放着吃灰。 </p><p>下面是些正经事。 </p><p>备考 TOEFL (预祝首考过110/撒花), 练口语, 练听力, 背单词, 刷 TPO, 具体的复习细节参考 XDF 的模考分析加上网上的信息吧, 对这个考试我真的没底气, 寄希望于 <em>“Make My English Good Again”</em>吧(逃)。 </p><p>预习下学期问求，主要是 <em>Introduction to Algorithms</em>, <em>Discrete Mathematics</em> 两本书吧, 先找16级的学长学姐要课件。 如果还算闲就再把 DH, UD 再读读, 其实这也是老师推荐做的。 </p><p>最终该看什么书还是自己的事, 具体也没决定, 但是下个 semester 的教材必看, 不希望以后问求给我的压力更大。 </p><p>(跪求蓄爷和栗子两位让我期末及格呜呜呜) </p><p>编程是重头戏, 刷 POJ, 一路把 C++ STL, 各种常用算法等等都学掉, 以能够使用为目标, 还算闲就细读 <em>C++ Primer</em>, 当然它主要还是做工具书了, 话说 <em>C Primer Plus</em> 怎么就被我扔进了历史的垃圾堆? </p><p>别太指望一个寒假能做多少事, 有组织活动和参加聚会什么的, 以上估计已经是极限, 其实日常补番看片的就占去大量时间了, 还得发发呆, 假期不希望那么紧张。 </p><p>极其次要的, 如果再有空就看看数分高代好了(划去)。 </p><p>还有, 学日语, 这个好玩了/斜眼笑。 </p><h1 id="脑中盘旋的-部分观点及对未来的看法。"><a href="#脑中盘旋的-部分观点及对未来的看法。" class="headerlink" title="脑中盘旋的, 部分观点及对未来的看法。"></a>脑中盘旋的, 部分观点及对未来的看法。</h1><p>大一上学业一团糟, 学业之外随之凝涩起来。 明年我就是一名纯粹的计科学生了, 期望对学业变得更专心更享受。 </p><p>家家有本难念的经, 每所大学都不可能完美, 当初选择南大很重要的原因就是学业和生活的安排比其他的选择更成熟和稳定。 </p><p>然而对于匡院来说, 计算机方向的课程体系这一段是强行插起来的, 既要保持大理科模式, 又要去适应计算机拔尖的课程体系, 结果就是给零基础学生造成过大的压力。 </p><p>当然过了今年就几乎是计科那边的学生了, 不需要再去学太多杂乱的东西, 学业也会慢慢好起来吧。 </p><p>然后想打 ACM  可是没基础/委屈, 不知道有没有人帮忙, 当然胡老师帮过我一点点。 虽然栗子超强但是带学弟应该也不是他的任务吧, 放假后找他聊随机应变啦。 </p><p>他们大一参加美赛真是, 当然肯定挺有意思, 但是我还是快点回家过年吧。 以及没想好以后要不要专门花时间学, 要不要认真准备建模。 </p><p>我这学期的绩点肯定唉, 希望半个学期影响不会很大吧。</p><p><strong>最后无论如何, 元旦到了, 新年快乐!</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;考试周到了, 我现在慌得一批/发抖。
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="年终" scheme="http://yoursite.com/tags/%E5%B9%B4%E7%BB%88/"/>
    
  </entry>
  
  <entry>
    <title>期末考试要来啦!</title>
    <link href="http://yoursite.com/2018/12/19/%E6%9C%9F%E6%9C%AB%E8%80%83%E8%AF%95%E8%A6%81%E6%9D%A5%E5%95%A6/"/>
    <id>http://yoursite.com/2018/12/19/期末考试要来啦/</id>
    <published>2018-12-19T13:04:10.000Z</published>
    <updated>2019-02-01T14:25:34.765Z</updated>
    
    <content type="html"><![CDATA[<p>其实是想说期末要来啦，考试只是一部分吧。<a id="more"></a></p><p>有人说，吃喝玩乐就像是泡脚，期末考试就像是把洗脚水喝掉。泡得越舒服，洗脚水就越难喝。<br>说的真对，我没什么好反驳的，只能最后几天少泡脚。</p><p>忙里偷闲花了一下午把这个博客搭起来，本想等寒假里研究一下再建，然而有自己的博客的想法实在太诱人，忍了几次终于没忍住。</p><p>那就这样，写问求作业吧。一周之后或许会来写篇年终总结吧，在大学里也感受到所谓的 <em>岁末的忧伤与热血</em>了，需要写点什么回望一下展望一下。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实是想说期末要来啦，考试只是一部分吧。
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
</feed>
